{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { color, space, layout } from 'styled-system';\nimport { withRouter } from 'next/router';\nimport Head from 'next/head';\nimport axios from 'axios';\nimport Swiper from 'react-id-swiper';\nimport NoSSR from 'react-no-ssr';\nimport PostSwiper from '../../components/PostSwiper';\nimport Card from '../../components/Card';\nvar FeedWrapper = styled.div.withConfig({\n  displayName: \"subreddits__FeedWrapper\",\n  componentId: \"sc-78bo8g-0\"\n})({}, color, space, layout);\n\nvar Feed =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Feed, _Component);\n\n  function Feed(props) {\n    var _this;\n\n    _classCallCheck(this, Feed);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Feed).call(this, props));\n    _this.state = {\n      subreddits: [],\n      posts: [],\n      index: 0\n    };\n    return _this;\n  }\n\n  _createClass(Feed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var router = this.props.router;\n      var query = router.query;\n      var subreddits = query.subreddits;\n      console.log(subreddits);\n      axios.get(\"https://www.reddit.com/r/\".concat(subreddits, \"/.json\"), {\n        crossdomain: true\n      }).then(function (response) {\n        // handle success\n        console.log(response);\n        var posts = response.data.data.children;\n        console.log(posts);\n        this.setState({\n          posts: posts\n        });\n      }.bind(this))[\"catch\"](function (error) {\n        // handle error\n        console.log(error);\n      })[\"finally\"](function () {// always executed\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var posts = this.state.posts;\n      return React.createElement(FeedWrapper, {\n        bg: \"#000\",\n        color: \"#fff\",\n        width: \"100vw\",\n        height: \"100vh\",\n        overflow: \"hidden\"\n      }, React.createElement(Head, null, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://cdnjs.cloudflare.com/ajax/libs/Swiper/4.5.0/css/swiper.min.css\"\n      })), React.createElement(NoSSR, null, posts.length > 0 && React.createElement(PostSwiper, {\n        posts: posts\n      })));\n    }\n  }]);\n\n  return Feed;\n}(Component);\n\nexport default withRouter(Feed);","map":null,"metadata":{},"sourceType":"module"}